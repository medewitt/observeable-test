---
title: "forsyth-observable"
execute:
  eval: true
  echo: false
  message: false
---

This is a Quarto website.

To learn more about Quarto websites visit <https://quarto.org/docs/websites>.

```{r eval=FALSE}
library(data.table)
library(tidyverse)
library(quarto)
dat <- nccovid::get_cdc_vax()

dat_forsyth <- setDT(dat)[County == "Forsyth"]

fwrite(dat_forsyth, "test.csv")

fwrite(dat[County %in% c("Forsyth", "Guilford")], "test2.csv")
```

## Filters

Now select level of care you wish to see. 
Note all values are taken at the Midnight Census.

```{ojs}
#| eval: true
viewof islands = Inputs.select(data.map(d => d.County), {
  multiple: true, 
  label: "County", 
  value: "Forsyth",
  sort: true, 
  unique: true})
  
 islands
```

## Graphics

Individual levels of care:

```{ojs}
#| eval: true
Plot.plot({
  y: {
    grid: true,
    label: "Number of Patients in Beds"
  },
  marks: [
    Plot.line(filtered, {
    x: "Date", 
    y: "Series_Complete_Pop_Pct", 
    stroke: "County"}),
    Plot.text(filtered, Plot.selectLast({
    x: "Date",
    y: "Series_Complete_Pop_Pct",
    z: "County",
    text: "County",
    textAnchor: "Series_Complete_Pop_Pct",
    dx : -4,
})),
  ]
})
```



Overall:



```{ojs}
#| eval: true
Plot.plot({
  y: {
    grid: true,
    label: "Total Census"
  },
  marks: [
    Plot.line(datUse.indices(), {
      x: datUse.column("Date"), 
      y: datUse.column("total_cnt")
      })
  ],
  caption: html`Overall Census.`
})
```


## Sources

```{ojs}
#| eval: true
data = FileAttachment('https://raw.githubusercontent.com/medewitt/covidcdc/main/output/nc-county-vax.csv').csv({ typed: true })
```

```{ojs}
filtered = data.filter(function(data) {
  return islands.includes(data.County);
})
```


```{ojs}
#| eval: true
import { aq, op } from 'arquero';


penguins = await aq.loadCSV('https://raw.githubusercontent.com/medewitt/covidcdc/main/output/nc-county-vax.csv')

```

```{ojs}

joingtab = aq.table({ County: islands})
```

## Summary Tables

Summary statistics by level of care selected:

```{ojs}
#| eval: true
viewof datUsesm = penguins
  .semijoin(joingtab, 'County')
  .groupby('County')
  .rollup({ Avg: d => op.average(d.Series_Complete_Pop_Pct),
            Min: d => op.min(d.Series_Complete_Pop_Pct),
            Max: d => op.max(d.Series_Complete_Pop_Pct)})
  .view();
  
  datUsesm
```

Overall time series

```{ojs}
#| eval: true
viewof datUse = penguins
  .semijoin(joingtab, 'County')
  .groupby('Date')
  .rollup({ total_cnt: d => op.sum(d.Series_Complete_Pop_Pct)})
  .view();
  
  datUse
```