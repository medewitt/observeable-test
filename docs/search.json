[
  {
    "objectID": "hospitals.html",
    "href": "hospitals.html",
    "title": "Testing an API Call",
    "section": "",
    "text": "viewof islands = Inputs.select(data.map(d => d.State), {\n  multiple: false, \n  label: \"County\", \n  value: \"Forsyth\",\n  sort: true, \n  unique: true})\n  \n islands\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis section wonâ€™t change, it just represents a static construction\n\nstate = 'TX'\nuseUrl = 'https://healthdata.gov/resource/anag-cw7u.csv?state=' + `${state}`\n\nuseUrl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis section will change based on the selection.\n\ntestUrl = 'https://healthdata.gov/resource/anag-cw7u.csv?state=' + `${islands}`\n\ntestUrl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis table is static.\n\nimport { aq, op} from \"@uwdata/arquero\"\n\nviewof hospitals = aq.fromCSV(await fetch(useUrl).then(res => res.text()))\n.view()\n\nhospitals\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis table is not static.\n\nviewof hospitalstest = aq.fromCSV(await fetch(testUrl).then(res => res.text()))\n.view()\n\nhospitalstest\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof dat_agg = hospitalstest\n  .groupby('collection_week')\n  .rollup({ total_beds: d => op.sum(d.total_beds_7_day_coverage)})\n  .ungroup()\n  .orderby('collection_week')\n  .view();\n\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Total 7 Day Coverage\"\n  },\n  marks: [\n    Plot.barY(dat_agg.indices(), {\n      x: dat_agg.column(\"collection_week\"), \n      y: dat_agg.column(\"total_beds\")\n      })\n  ],\n  caption: html`Total 7 Day Coverage`\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment('states.csv').csv({ typed: true })"
  },
  {
    "objectID": "index.html#filters",
    "href": "index.html#filters",
    "title": "Vaccination Rates in North Carolina",
    "section": "Filters",
    "text": "Filters\nNow select level of care you wish to see. Note all values are taken at the Midnight Census.\n\nviewof islands = Inputs.select(data.map(d => d.County), {\n  multiple: true, \n  label: \"County\", \n  value: \"Forsyth\",\n  sort: true, \n  unique: true})\n  \n islands"
  },
  {
    "objectID": "index.html#graphics",
    "href": "index.html#graphics",
    "title": "Vaccination Rates in North Carolina",
    "section": "Graphics",
    "text": "Graphics\nReview by county the percent of the population vaccinated.\n\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Percentage of the Population Vaccinated\"\n  },\n  marks: [\n    Plot.line(filtered, {\n    x: \"Date\", \n    y: \"Series_Complete_Pop_Pct\", \n    stroke: \"County\"}),\n    Plot.text(filtered, Plot.selectLast({\n    x: \"Date\",\n    y: \"Series_Complete_Pop_Pct\",\n    z: \"County\",\n    text: \"County\",\n    textAnchor: \"Series_Complete_Pop_Pct\",\n    dx : -4,\n})),\n  ]\n})\n\n\n\n\n\n\nOverall numbner of persons vaccinated for selected counties.\n\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Persons Vaccinated\"\n  },\n  marks: [\n    Plot.line(datUse.indices(), {\n      x: datUse.column(\"Date\"), \n      y: datUse.column(\"total_cnt\")\n      })\n  ],\n  caption: html`Total Population Vaccinated (Selected Counties)`\n})"
  },
  {
    "objectID": "index.html#sources",
    "href": "index.html#sources",
    "title": "Vaccination Rates in North Carolina",
    "section": "Sources",
    "text": "Sources\n\ndata = FileAttachment('https://raw.githubusercontent.com/medewitt/covidcdc/main/output/nc-county-vax.csv').csv({ typed: true })\n\n\n\n\n\n\n\nfiltered = data.filter(function(data) {\n  return islands.includes(data.County);\n})\n\n\n\n\n\n\n\nimport { aq, op} from \"@uwdata/arquero\"\n\nviewof penguins =  aq.fromCSV(await fetch('https://raw.githubusercontent.com/medewitt/covidcdc/main/output/nc-county-vax.csv').then(res => res.text()))\n.view()\n\n\npenguins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\njoingtab = aq.table({ County: islands})"
  },
  {
    "objectID": "index.html#summary-tables",
    "href": "index.html#summary-tables",
    "title": "Vaccination Rates in North Carolina",
    "section": "Summary Tables",
    "text": "Summary Tables\nSummary statistics by level of care selected:\n\nviewof datUsesm = penguins\n  .semijoin(joingtab, 'County')\n  .groupby('County')\n  .rollup({ Avg: d => op.ceil(op.average(d.Series_Complete_Yes)),\n            Min: d => op.min(d.Series_Complete_Yes),\n            Max: d => op.max(d.Series_Complete_Yes)})\n  .view();\n  \n  datUsesm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverall time series\n\nviewof datUse = penguins\n  .semijoin(joingtab, 'County')\n  .groupby('Date')\n  .rollup({ total_cnt: d => op.sum(d.Series_Complete_Yes)})\n  .view();\n  \n  datUse"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Nothing to see here.\n\n1 + 1\n\n[1] 2\n\n\ndata{\nint N;\nreal y[N];\n}"
  }
]